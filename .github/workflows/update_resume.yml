name: Update Resume and Commit Expanded Resume

on:
  push:
    paths:
      - 'assets/files/resume.md'  # Triggers the workflow only when resume.md is updated

jobs:
  update_resume:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Ensures the entire history is fetched

      # Step 2: Install jq (for JSON processing)
      - name: Install jq
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      # Step 3: Process Resume with OpenAI GPT-3.5
      - name: Process Resume with OpenAI GPT-3.5
        id: nlp
        run: |
          echo "Processing resume with OpenAI..."

          # Read the contents of resume.md
          RESUME_CONTENT=$(cat assets/files/resume.md)

          # Construct the JSON payload using jq to ensure proper formatting and escaping
          jq -n \
            --arg model "gpt-4" \
            --arg system "You are a professional career advisor. Please enhance the following resume content by performing the following actions:\n\n1. **Add a Concise Summary at the Top:**\n   - Create a brief summary that highlights the individual's professional background, key strengths, and career objectives.\n\n2. **Enhance Existing Sections Without Removing Them:**\n   - Improve the language and detail in the existing sections to make them more impactful and professional.\n\n3. **Improve the Projects Section:**\n   - For each project listed, effectively incorporate the programming languages mentioned next to the project to highlight technical skills.\n\n**Important:** Do not remove any existing sections or details unless explicitly specified. Ensure that all original information remains intact and is only enhanced for clarity and professionalism. Make sure to remove the header at the top, and only enhance the TECHNICAL SKILLS, Projects, Education, collaborative experience and Interest, and finally make sure to enhance all of this in first person" \
            --arg user "$RESUME_CONTENT" \
            '{
              model: $model,
              messages: [
                { role: "system", content: $system },
                { role: "user", content: $user }
              ],
              max_tokens: 1000,
              temperature: 0.7
            }' > payload.json

          # Output the constructed payload for debugging purposes
          echo "Constructed JSON payload:"
          cat payload.json

          # Make the API request to OpenAI
          curl https://api.openai.com/v1/chat/completions \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer ${{ secrets.OPENAI_API_KEY }}" \
            -d @payload.json > response.json

          # Output the raw response for debugging
          echo "OpenAI API response:"
          cat response.json

          # Extract the expanded content using jq
          EXPANDED_CONTENT=$(jq -r '.choices[0].message.content' response.json)

          # Check if the expanded content was successfully extracted
          if [ -z "$EXPANDED_CONTENT" ] || [ "$EXPANDED_CONTENT" == "null" ]; then
            echo "Error: Failed to retrieve expanded content from OpenAI response."
            exit 1
          fi

          echo "Expanded content:"
          echo "$EXPANDED_CONTENT"

          # Save the expanded content to expanded_resume.md
          echo "$EXPANDED_CONTENT" > assets/files/expanded_resume.md

          # Verify file creation
          echo "Contents of expanded_resume.md:"
          cat assets/files/expanded_resume.md

      # Step 4: Commit the Expanded Resume
      - name: Commit Expanded Resume
        run: |
          # Configure Git with a user name and email for the commit
          git config --local user.name "github-actions[bot]"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          
          # Add the expanded_resume.md file to staging
          git add assets/files/expanded_resume.md
          
          # Optional: Display the current Git status for debugging
          git status
          
          # Commit the changes; if there are no changes, proceed without failing
          git commit -m "Update expanded resume via GitHub Actions" || echo "No changes to commit"

      # Step 5: Push the Committed Changes Back to GitHub
      - name: Push Changes
        if: github.ref == 'refs/heads/main'  # Ensure this runs only on the main branch
        run: |
          # Push the commit back to the repository
          git push origin main
